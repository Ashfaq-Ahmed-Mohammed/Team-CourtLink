basePath: /
definitions:
  DataBase.CourtAvailability:
    properties:
      CourtID:
        type: integer
      CourtName:
        type: string
      CourtStatus:
        type: integer
      Slots:
        items:
          type: integer
        type: array
    type: object
  DataBase.CourtUpdate:
    properties:
      Court_ID:
        type: integer
      Court_Name:
        type: string
      Customer_ID:
        type: integer
      Slot_Index:
        type: integer
      Sport_name:
        type: string
    type: object
  DataBase.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing court bookings
  title: Court Booking API
  version: "1.0"
paths:
  /UpdateCourtSlot:
    put:
      consumes:
      - application/json
      description: Toggles the availability of a court time slot. If the slot is booked,
        it is freed; if it is free, it is booked.
      parameters:
      - description: Court slot update request
        in: body
        name: updateRequest
        required: true
        schema:
          $ref: '#/definitions/DataBase.CourtUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: 'Slot updated successfully for Court_ID: {Court_ID}, Slot_Index:
            {Slot_Index}'
          schema:
            type: string
        "400":
          description: Invalid request body or Slot_Index out of range
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "404":
          description: Court time slots not found
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "500":
          description: Database error or failed to update slot
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
      summary: Update court slot status
      tags:
      - courts
  /getCourts:
    get:
      consumes:
      - application/json
      description: Fetches courts based on the selected sport and provides their availability
        status along with time slots.
      parameters:
      - description: Sport name
        in: query
        name: sport
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of available courts with time slots
          schema:
            items:
              $ref: '#/definitions/DataBase.CourtAvailability'
            type: array
        "400":
          description: Missing 'sport' query parameter
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "404":
          description: Sport not found or no courts available
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
      summary: Get court availability
      tags:
      - courts
swagger: "2.0"
