basePath: /
definitions:
  Bookings.BookingResponse:
    properties:
      booking_id:
        type: integer
      booking_status:
        type: string
      court_name:
        type: string
      slot_time:
        type: string
      sport_name:
        type: string
    type: object
  DataBase.Bookings:
    properties:
      Booking_ID:
        type: integer
      Booking_Status:
        type: string
      Booking_Time:
        type: integer
      Court_ID:
        type: integer
      Customer_ID:
        type: integer
      Sport_ID:
        type: integer
      court:
        $ref: '#/definitions/DataBase.Court'
      customer:
        $ref: '#/definitions/DataBase.Customer'
      sport:
        $ref: '#/definitions/DataBase.Sport'
    type: object
  DataBase.CancelRequest:
    properties:
      Booking_ID:
        type: integer
    type: object
  DataBase.Court:
    properties:
      Court_ID:
        type: integer
      Court_Location:
        type: string
      Court_Name:
        type: string
      Court_Status:
        type: integer
      Sport_id:
        type: integer
      court_Capacity:
        type: integer
      sport:
        $ref: '#/definitions/DataBase.Sport'
    type: object
  DataBase.CourtAvailability:
    properties:
      CourtID:
        type: integer
      CourtName:
        type: string
      CourtStatus:
        type: integer
      Slots:
        items:
          type: integer
        type: array
    type: object
  DataBase.CourtUpdate:
    properties:
      Court_ID:
        type: integer
      Court_Name:
        type: string
      Customer_email:
        type: string
      Slot_Index:
        type: integer
      Sport_ID:
        type: string
      Sport_name:
        type: string
    type: object
  DataBase.Customer:
    properties:
      Contact:
        type: string
      Customer_ID:
        type: integer
      email:
        type: string
      name:
        type: string
    type: object
  DataBase.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  DataBase.Sport:
    properties:
      Sport_ID:
        type: integer
      Sport_name:
        type: string
      sport_Description:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing court bookings
  title: Court Booking API
  version: "1.0"
paths:
  /CancelBookingandUpdateSlot:
    put:
      consumes:
      - application/json
      description: Cancels a booking by updating its status to "Cancelled" and marks
        the corresponding time slot (based on Booking_Time) as available (sets it
        to 1) in the Court_TimeSlots record.
      parameters:
      - description: Cancel Booking Request
        in: body
        name: cancelRequest
        required: true
        schema:
          $ref: '#/definitions/DataBase.CancelRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: 'Booking cancelled and slot updated successfully for Booking_ID:
            123'
          schema:
            type: string
        "400":
          description: Invalid request body or Invalid Slot_Index
          schema:
            type: string
        "404":
          description: Booking not found or Court TimeSlots not found
          schema:
            type: string
        "500":
          description: Failed to start transaction, database error, or transaction
            commit failed
          schema:
            type: string
      summary: Cancel a booking and update court time slot
      tags:
      - courts
  /CreateBooking:
    post:
      consumes:
      - application/json
      description: Creates a new booking after validating the existence of the customer,
        sport, and court.
      parameters:
      - description: Booking data
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/DataBase.Bookings'
      produces:
      - application/json
      responses:
        "201":
          description: Booking record added successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "404":
          description: Customer, sport, or court not found
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
      summary: Create a new booking
      tags:
      - bookings
  /Customer:
    post:
      consumes:
      - application/json
      description: Adds a new customer to the database if they do not already exist.
      parameters:
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/DataBase.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: Customer already exists
        "201":
          description: Customer record added successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Create a new customer
      tags:
      - customers
  /UpdateCourtSlotandBooking:
    put:
      consumes:
      - application/json
      description: Toggles the availability of a court time slot and, based on the
        provided customer email and sport name,
      parameters:
      - description: Court slot update request including Customer_email and Sport_name
        in: body
        name: updateRequest
        required: true
        schema:
          $ref: '#/definitions/DataBase.CourtUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: 'Slot updated and booking created successfully for Court_ID:
            {Court_ID}, Slot_Index: {Slot_Index}'
          schema:
            type: string
        "400":
          description: Invalid request body or Slot_Index out of range
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "404":
          description: Court time slots, Customer, or Sport not found
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "500":
          description: Database error or failed to update slot/booking
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
      summary: Update court slot and create booking
      tags:
      - courts
  /getCourts:
    get:
      consumes:
      - application/json
      description: Fetches courts based on the selected sport and provides their availability
        status along with time slots.
      parameters:
      - description: Sport name
        in: query
        name: sport
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of available courts with time slots
          schema:
            items:
              $ref: '#/definitions/DataBase.CourtAvailability'
            type: array
        "400":
          description: Missing 'sport' query parameter
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
        "404":
          description: Sport not found or no courts available
          schema:
            $ref: '#/definitions/DataBase.ErrorResponse'
      summary: Get court availability
      tags:
      - courts
  /listBookings:
    get:
      consumes:
      - application/json
      description: Retrieves a list of bookings for a customer by email. Returns booking
        details including court name, sport name, slot time, and booking status.
      parameters:
      - default: john@example.com
        description: Customer email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bookings for the customer"  example([{"booking_id":1,"court_name":"Court
            A","sport_name":"Tennis","slot_time":"10-11 AM","booking_status":"Confirmed"}])
          schema:
            items:
              $ref: '#/definitions/Bookings.BookingResponse'
            type: array
        "400":
          description: Email query parameter is required
          schema:
            type: string
        "404":
          description: Customer not found
          schema:
            type: string
        "500":
          description: Database error while fetching bookings
          schema:
            type: string
      summary: List bookings for a customer
      tags:
      - Booking
swagger: "2.0"
